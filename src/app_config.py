"""
Configuration et initialisation de l'application Trading Agent.
"""

import sys
import os
from datetime import datetime

def setup_paths():
    """Configure les chemins d'acc√®s pour les modules."""
    base_dir = os.path.dirname(os.path.dirname(__file__))  # Remonter au dossier parent
    paths_to_add = ['src', 'stocks', 'google_integration']
    
    for path in paths_to_add:
        full_path = os.path.join(base_dir, path)
        if os.path.exists(full_path):
            sys.path.insert(0, full_path)  # Utiliser insert(0) pour priorit√©
        else:
            print(f"‚ö†Ô∏è  Attention: Le dossier '{path}' n'existe pas")

def import_modules():
    """Importe tous les modules n√©cessaires."""
    try:
        # Imports principaux
        from stocks.portfolio import GAFAM
        from stocks.get_data import get_stock_data
        from src.calculate_signals import calculate_signals
        from src.quick_analyze import analyze_quick
        from src.detailed_analyze import analyze_detailed
        
        # Import Google Sheets avec gestion d'erreur am√©lior√©e
        google_sheets_available = False
        GoogleSheetsManager = None
        GoogleSheetsInterface = None
        
        try:
            # Test d'abord si les d√©pendances Google sont disponibles
            import google.oauth2.service_account
            import googleapiclient.discovery
            
            # Si OK, importer nos modules
            from google_integration.sheets_manager import GoogleSheetsManager
            from google_integration.google_sheets import GoogleSheetsInterface
            
            google_sheets_available = True
            print("‚úÖ Module Google Sheets charg√© avec succ√®s")
            
        except ImportError as e:
            print(f"‚ö†Ô∏è  Google Sheets non disponible: {e}")
            print("üí° Pour activer Google Sheets, installez:")
            print("   pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client")
            GoogleSheetsManager = None
            GoogleSheetsInterface = None
            google_sheets_available = False
        
        return {
            'GAFAM': GAFAM,
            'get_stock_data': get_stock_data,
            'calculate_signals': calculate_signals,
            'analyze_quick': analyze_quick,
            'analyze_detailed': analyze_detailed,
            'GoogleSheetsManager': GoogleSheetsManager,
            'GoogleSheetsInterface': GoogleSheetsInterface,
            'google_sheets_available': google_sheets_available
        }
        
    except ImportError as e:
        print(f"‚ùå Erreur d'import critique: {e}")
        print("üí° V√©rifiez que tous les fichiers requis sont pr√©sents:")
        print("   - stocks/portfolio.py")
        print("   - stocks/get_data.py") 
        print("   - src/calculate_signals.py")
        print("   - src/quick_analyze.py")
        print("   - src/detailed_analyze.py")
        print("\nüí° V√©rifiez aussi que les d√©pendances sont install√©es:")
        print("   pip install yfinance pandas")
        sys.exit(1)

def print_header():
    """Affiche l'en-t√™te de l'application."""
    print("=" * 80)
    print("üéØ TRADING AGENT SIMPLE")
    print("=" * 80)
    print("üìä Portefeuille: GAFAM")
    print(f"‚è∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 80)

def check_dependencies():
    """V√©rifie que les d√©pendances essentielles sont install√©es."""
    required_packages = ['yfinance', 'pandas']
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print(f"‚ùå D√©pendances manquantes: {', '.join(missing_packages)}")
        print(f"üí° Installez avec: pip install {' '.join(missing_packages)}")
        return False
    
    return True

def initialize_app():
    """Initialise compl√®tement l'application."""
    print("üöÄ D√©marrage de Trading Agent Simple...")
    
    # V√©rifier les d√©pendances
    if not check_dependencies():
        sys.exit(1)
    
    # Configurer les chemins
    setup_paths()
    
    # Importer les modules
    modules = import_modules()
    
    # Afficher l'en-t√™te
    print_header()
    
    # Afficher le statut des modules
    print("üì¶ Modules charg√©s:")
    print(f"   ‚úÖ Stocks: {bool(modules['GAFAM'])}")
    print(f"   ‚úÖ Analyse: {bool(modules['analyze_quick'])}")
    print(f"   {'‚úÖ' if modules['google_sheets_available'] else '‚ö†Ô∏è '} Google Sheets: {modules['google_sheets_available']}")
    
    return modules
